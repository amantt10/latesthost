
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Potential_participantsScalarFieldEnum = {
  id: 'id',
  eligibility_criteria: 'eligibility_criteria',
  first_name: 'first_name',
  last_name: 'last_name',
  phone_number: 'phone_number',
  email: 'email',
  county: 'county',
  zip: 'zip',
  referrer_first_name: 'referrer_first_name',
  referrer_last_name: 'referrer_last_name',
  referrer_phone: 'referrer_phone',
  referrer_email: 'referrer_email',
  referral_source: 'referral_source',
  referral_business_name: 'referral_business_name',
  client_of_mdrrs: 'client_of_mdrrs',
  staff_submit_referral_to_mdrs: 'staff_submit_referral_to_mdrs',
  release_info_consent_mdrs: 'release_info_consent_mdrs',
  long_covid_syndrome: 'long_covid_syndrome',
  is_ms_resident: 'is_ms_resident',
  is_age_16_to_70: 'is_age_16_to_70',
  desire_to_continue_work: 'desire_to_continue_work',
  wants_to_work_if_unemployed: 'wants_to_work_if_unemployed',
  not_involving_other_off: 'not_involving_other_off',
  submitted_at: 'submitted_at'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  role: 'role',
  role_description: 'role_description',
  role_capabilities: 'role_capabilities',
  first_name: 'first_name',
  last_name: 'last_name',
  email: 'email',
  phone: 'phone',
  password: 'password',
  organization: 'organization',
  title: 'title',
  last_login: 'last_login',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Eligibility_screeningScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  potential_participant_id: 'potential_participant_id',
  chp_partner_business: 'chp_partner_business',
  contact_method: 'contact_method',
  history_of_contact_attempts: 'history_of_contact_attempts',
  mode_of_learning_about_chp: 'mode_of_learning_about_chp',
  source_of_learning_about_chp: 'source_of_learning_about_chp',
  individual_interest_in_chp: 'individual_interest_in_chp',
  disability_accompanied_by_long_covid: 'disability_accompanied_by_long_covid',
  long_covid_syndrome: 'long_covid_syndrome',
  is_ms_resident: 'is_ms_resident',
  is_age_16_to_70: 'is_age_16_to_70',
  is_currently_employed: 'is_currently_employed',
  desire_to_continue_work: 'desire_to_continue_work',
  paid_subminimum_wage: 'paid_subminimum_wage',
  working_leave_status: 'working_leave_status',
  risk_of_losing_job: 'risk_of_losing_job',
  how_you_hope_to_benefit_from_chp: 'how_you_hope_to_benefit_from_chp',
  interest_in_returning_to_work: 'interest_in_returning_to_work',
  not_involving_other_off: 'not_involving_other_off',
  confirmation_of_eligibility_questions: 'confirmation_of_eligibility_questions',
  initial_contact_results: 'initial_contact_results',
  reason_for_not_eligible: 'reason_for_not_eligible',
  statement_of_informed_consent: 'statement_of_informed_consent',
  release_of_information_roi: 'release_of_information_roi',
  individual_provided_medical_information: 'individual_provided_medical_information',
  status_of_receiving_medical_information: 'status_of_receiving_medical_information',
  individual_home_address: 'individual_home_address',
  individual_birthdate: 'individual_birthdate',
  eligibility_for_participation: 'eligibility_for_participation',
  service_region: 'service_region',
  vocational_counselor_assigned_first_name: 'vocational_counselor_assigned_first_name',
  vocational_counselor_assigned_last_name: 'vocational_counselor_assigned_last_name',
  vocational_counselors_caseload_or_waitlist: 'vocational_counselors_caseload_or_waitlist',
  current_client_of_mdrs_or_no: 'current_client_of_mdrs_or_no',
  submit_an_mdrs_referral: 'submit_an_mdrs_referral',
  sharing_information_with_mdrs: 'sharing_information_with_mdrs',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  potential_participants: 'potential_participants',
  users: 'users',
  eligibility_screening: 'eligibility_screening'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
